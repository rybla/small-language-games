/*
This CSS file provides a retro-futuristic theme for the text adventure game UI.

Overall Theme:
- A dark, neon-infused aesthetic with glowing elements and CRT screen effects.
- Uses a color palette of dark blues, purples, and vibrant cyan, magenta, and lime green.
- Employs animations for glowing, flickering, and scanline effects to create a dynamic, "living" interface.
- Fonts are chosen to evoke a sense of classic computer terminals and futuristic displays.

Key Effects and Animations:
- `glow`: A keyframe animation that creates a pulsating, breathing glow effect, applied to borders, text, and interactive elements.
- `scanline`: An animation that simulates the look of a CRT monitor by moving a subtle horizontal line pattern down the screen.
- `flicker`: A text-flicker animation used for loading states to give a "glitching" effect.
- `newTurnArrives`: A fancy animation for when a new player turn appears, making it slide in with a color flash to signify new data.
- `fadeIn`: A simple fade-in animation, used for modals and other elements.

Structure & Layout:
- The file starts with root variables for colors and font imports.
- The `main` style sets the global background, font, and a background grid pattern.
- `.content` and `.content_column` define the primary layout for the game interface.
- To prevent the right-hand sidebar from overflowing, `overflow: hidden` is applied to the `.Prompt` grid container, and `min-height: 0` is applied to its children (`.player_info`, etc.). This ensures that the panels with `overflow-y: auto` will scroll correctly within the grid layout.
- `.turns` and `.PlayerTurn` style the game log, separating user input from game output. The `.PlayerTurn` element uses the `newTurnArrives` animation.
- `.Prompt` styles the user input area, including the textarea with a CRT effect and the informational side panels.
- `.RoomView` and `.ItemView` style the cards for rooms and items. Context-specific rules have been added to control their size: large for items/rooms in the action log, medium for the current room panel, and small for inventory items.
- `.ImageModal` styles the full-screen image overlay.
- Helper classes like `.LabeledValue` and panels like `.status` are styled to match the theme.
*/

@import url("https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Share+Tech+Mono&display=swap");

:root {
    --background-color: #0d0221;
    --primary-glow-color: #00f6ff;
    --secondary-glow-color: #ff00c1;
    --tertiary-glow-color: #a0ff00;
    --text-color: #e0e0e0;
    --border-color: rgba(0, 246, 255, 0.3);
    --panel-bg-color: rgba(16, 24, 64, 0.7);
    --font-primary: "Orbitron", sans-serif;
    --font-secondary: "Share Tech Mono", monospace;
}

/* --- KEYFRAME ANIMATIONS --- */
@keyframes glow {
    0%,
    100% {
        box-shadow:
            0 0 5px var(--primary-glow-color),
            0 0 10px var(--primary-glow-color),
            0 0 15px var(--primary-glow-color);
        text-shadow:
            0 0 3px var(--primary-glow-color),
            0 0 5px var(--primary-glow-color);
    }
    50% {
        box-shadow:
            0 0 10px var(--primary-glow-color),
            0 0 20px var(--primary-glow-color),
            0 0 30px var(--primary-glow-color);
        text-shadow:
            0 0 5px var(--primary-glow-color),
            0 0 10px var(--primary-glow-color);
    }
}

@keyframes scanline {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 0 100%;
    }
}

@keyframes flicker {
    0%,
    100% {
        opacity: 1;
    }
    50% {
        opacity: 0.6;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes newTurnArrives {
    from {
        opacity: 0;
        transform: translateX(-30px);
        border-left-color: var(--tertiary-glow-color);
    }
    to {
        opacity: 1;
        transform: translateX(0);
        border-left-color: var(--secondary-glow-color);
    }
}

/* --- MAIN LAYOUT & BACKGROUND --- */
.main {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    background-color: var(--background-color);
    background-image:
        linear-gradient(rgba(0, 246, 255, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(0, 246, 255, 0.1) 1px, transparent 1px);
    background-size: 30px 30px;
    font-family: var(--font-secondary);
    color: var(--text-color);
    overflow: hidden;
}

.content_column {
    width: 100%;
    max-width: 1400px;
    height: 90vh;
}

.content {
    display: grid;
    grid-template-columns: 2fr 1px 1fr;
    grid-template-rows: 1fr;
    gap: 2rem;
    height: 100%;
    background: var(--panel-bg-color);
    backdrop-filter: blur(5px);
    border: 1px solid var(--border-color);
    border-radius: 10px;
    box-shadow: 0 0 15px rgba(0, 246, 255, 0.2);
    padding: 1.5rem;
}

.separator {
    width: 1px;
    height: 100%;
    background: var(--border-color);
    box-shadow: 0 0 5px var(--primary-glow-color);
}

/* --- TURNS & GAME LOG --- */
.turns {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    overflow-y: auto;
    padding-right: 1rem;
}

.turns::-webkit-scrollbar {
    width: 4px;
}

.turns::-webkit-scrollbar-track {
    background: transparent;
}

.turns::-webkit-scrollbar-thumb {
    background-color: var(--primary-glow-color);
    border-radius: 4px;
}

.PlayerTurn {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
    border-left: 2px solid var(--secondary-glow-color);
    background: rgba(255, 0, 193, 0.05);
    border-radius: 0 8px 8px 0;
    animation: newTurnArrives 1.5s cubic-bezier(0.25, 1, 0.5, 1);
}

.PrePlayerTurn {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
    border-left: 2px solid var(--primary-glow-color);
    background: rgba(0, 246, 255, 0.05);
    border-radius: 0 8px 8px 0;
    animation: fadeIn 0.5s ease-out;
}

.PlayerTurn .input,
.PrePlayerTurn .input {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.PlayerTurn .input::before,
.PrePlayerTurn .input::before {
    content: ">";
    font-family: var(--font-secondary);
    color: var(--tertiary-glow-color);
    font-size: 1.2rem;
}

.PlayerTurn .prompt,
.PrePlayerTurn .prompt {
    font-style: italic;
    color: var(--tertiary-glow-color);
}

.PlayerTurn .output,
.PrePlayerTurn .output {
    padding-left: 1.5rem;
}

.PlayerTurn .description {
    margin-bottom: 1rem;
    line-height: 1.6;
}

.PlayerTurn .actions {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.PlayerAction {
    background: rgba(0, 0, 0, 0.2);
    padding: 0.75rem;
    border-radius: 5px;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.PlayerAction .label {
    margin-bottom: 0.5rem;
    color: var(--text-color);
}

.processing {
    color: var(--primary-glow-color);
    animation: flicker 1.5s infinite;
}

/* --- PROMPT & INFO PANELS --- */
.Prompt {
    display: grid;
    grid-template-rows: auto 1fr 1fr 1fr;
    gap: 1.5rem;
    height: 100%;
    overflow: hidden;
}

.Prompt textarea {
    width: 100%;
    min-height: 80px;
    background: #000;
    border: 1px solid var(--tertiary-glow-color);
    border-radius: 5px;
    color: var(--tertiary-glow-color);
    font-family: var(--font-secondary);
    font-size: 1.1rem;
    padding: 0.75rem;
    resize: none;
    box-shadow: 0 0 8px var(--tertiary-glow-color);
    transition: box-shadow 0.3s;
    position: relative;
    overflow: hidden;
}

.Prompt textarea::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background:
        linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%),
        linear-gradient(
            90deg,
            rgba(255, 0, 0, 0.06),
            rgba(0, 255, 0, 0.02),
            rgba(0, 0, 255, 0.06)
        );
    background-size:
        100% 4px,
        6px 100%;
    pointer-events: none;
    animation: scanline 1s linear infinite;
}

.Prompt textarea:focus {
    outline: none;
    box-shadow:
        0 0 15px var(--tertiary-glow-color),
        0 0 5px var(--tertiary-glow-color) inset;
}

.player_info,
.room_info,
.inventory_info {
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    overflow-y: auto;
    min-height: 0;
}

.heading {
    font-family: var(--font-primary);
    font-size: 1.2rem;
    color: var(--primary-glow-color);
    text-shadow: 0 0 5px var(--primary-glow-color);
    margin-bottom: 0.5rem;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.5rem;
}

/* --- ITEM & ROOM CARDS --- */
.RoomView,
.ItemView {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    border: 1px solid transparent;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.RoomView .image,
.ItemView .image {
    width: 100%;
    height: auto;
    object-fit: cover;
    border-radius: 5px;
    border: 1px solid var(--border-color);
    cursor: pointer;
    transition:
        transform 0.3s,
        box-shadow 0.3s;
}

.RoomView:hover .image,
.ItemView:hover .image {
    transform: scale(1.05);
    box-shadow:
        0 0 10px var(--secondary-glow-color),
        0 0 20px var(--secondary-glow-color);
}

.RoomView .name,
.ItemView .name {
    font-family: var(--font-primary);
    font-size: 0.9rem;
    color: var(--text-color);
    text-align: center;
}

/* Context-based sizing for views */
.PlayerAction .ItemView,
.PlayerAction .RoomView {
    max-width: 200px;
}

.room_info .RoomView {
    max-width: 180px;
    margin: 0.5rem auto;
}

.inventory_info .items {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
    gap: 1rem;
}

.inventory_info .ItemView .name {
    font-size: 0.8rem;
}

/* --- IN-TEXT NAMES --- */
.ItemName,
.RoomName {
    font-weight: bold;
    padding: 2px 4px;
    border-radius: 3px;
}

.ItemName {
    color: var(--secondary-glow-color);
    background: rgba(255, 0, 193, 0.1);
}

.RoomName {
    color: var(--primary-glow-color);
    background: rgba(0, 246, 255, 0.1);
}

/* --- MODALS & PANELS --- */
.ImageModal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(10px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    animation: fadeIn 0.3s;
}

.ImageModal .image {
    max-width: 80vw;
    max-height: 80vh;
    width: auto;
    height: auto;
    border: 2px solid var(--primary-glow-color);
    border-radius: 10px;
    box-shadow: 0 0 25px var(--primary-glow-color);
}

.panel {
    position: fixed;
    top: 1rem;
    left: 50%;
    transform: translateX(-50%);
    padding: 1rem 2rem;
    border-radius: 5px;
    z-index: 100;
    font-family: var(--font-primary);
}

.status {
    background: rgba(255, 200, 0, 0.8);
    color: #000;
    box-shadow: 0 0 10px #ffc800;
}

.dev {
    top: 5rem;
    width: 80%;
    max-width: 1000px;
    background: var(--panel-bg-color);
    border: 1px solid var(--border-color);
    display: flex;
    gap: 1rem;
    height: 70vh;
}

.dev .Markdown {
    width: 50%;
    overflow-y: auto;
    padding: 1rem;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 5px;
}

/* --- HELPER COMPONENTS --- */
.LabeledValue {
    display: grid;
    grid-template-columns: 100px 1fr;
    gap: 1rem;
    align-items: start;
    padding: 0.25rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.LabeledValue .label {
    font-weight: bold;
    color: var(--primary-glow-color);
    text-align: right;
}

.LabeledValue .value {
    color: var(--text-color);
}
