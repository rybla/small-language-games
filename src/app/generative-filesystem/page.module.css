/*
==========================================================================================
// BLUEPRINT: RETRO-FLUID TERMINAL AESTHETIC
==========================================================================================
//
// ## Core Concept:
// A fusion of 90s CRT monitor aesthetics with modern fluidity. The design evokes the
// feeling of using a vintage command-line interface, but with the smooth animations
// and responsiveness of the modern web. It's nostalgic yet functional, prioritizing
// textual information and keyboard-based interaction.
//
// ## Visual Themes:
//
// 1.  **CRT Screen Simulation:**
//     - The background is a deep, dark color, not quite black, to mimic a powered-on
//       monitor in a dark room.
//     - A subtle, animated scan-line overlay will be present to enhance the CRT effect.
//     - A faint, radial gradient will emanate from the center, giving the illusion of
//       screen curvature and glow.
//
// 2.  **Glowing, Monochromatic Text:**
//     - All text will be a vibrant, neon color (e.g., green, amber, or cyan) against
//       the dark background.
//     - Text will have a subtle `text-shadow` to create a "glow" or "halation" effect,
//       mimicking the light bleed on old monitors.
//
// 3.  **Defined, Blocky Layouts:**
//     - The UI is structured into clear, rectangular panels separated by sharp, glowing
//       borders, similar to windowed applications in early GUIs.
//     - There are no rounded corners; all elements are sharp and angular.
//
// 4.  **Interactive Feedback & Animation:**
//     - A blinking block cursor is essential for text input areas.
//     - Text appears as if it's being typed out character by character.
//     - Panels and elements "boot up" on load with a flicker or fade-in animation.
//     - Hovering over interactive elements causes them to brighten or their borders to glow
//       more intensely.
//
// ## Color Palette (Dark Mode Dominant):
//
// -   **Background:** Very dark desaturated blue/charcoal (`#0a0c10`).
// -   **Foreground Panels:** Slightly lighter charcoal (`#1a1c20`).
// -   **Primary Text/Accent:** Bright neon green (`#33ff33`).
// -   **Secondary Accent:** Electric blue for highlights or secondary info (`#00ccff`).
// -   **Warning/Error:** Neon red/orange (`#ff3333`).
// -   **Borders:** Glowing version of the primary accent color.
//
// ## Typography:
//
// -   **Primary Font:** Monospace font (e.g., 'Fira Code', 'Source Code Pro', 'Courier New').
//     This is non-negotiable for the terminal aesthetic.
// -   **Style:** Regular weight. Bold might be used for titles, but sparingly.
//
// ## Animation & Interactivity:
//
// -   **Passive Animation:**
//     - The background has constantly moving, subtle scan lines.
//     - A gentle "hum" or flicker effect on the entire screen glow.
// -   **Entrance Animation:**
//     - Elements fade in with a slight vertical "scan" effect.
// -   **Hover Animations:**
//     - Links and buttons get a brighter text glow.
//     - Borders on panels might pulse or brighten.
// -   **Active/Click Animations:**
//     - A "press down" effect is simulated by a quick, sharp shadow or color flash.
// -   **State Change Animation:**
//     - New content (like logs or turns) should "type" or fade into view sequentially.
//
==========================================================================================
*/

/*------------------------------------*
 * VARIABLES & SETUP
 *------------------------------------*/
:root {
    --font-mono: "Fira Code", "Source Code Pro", monospace;

    --color-bg: #05080a;
    --color-panel-bg: #0a0f14;
    --color-text: #00ff6a;
    --color-text-dim: #00a846;
    --color-accent: #00ccff;
    --color-error: #ff3333;
    --color-border: #00ff6a44;
    --color-border-focus: #00ff6a;
    --color-shadow: #00ff6a;

    --glow-intensity:
        0 0 5px var(--color-shadow), 0 0 10px var(--color-shadow),
        0 0 15px var(--color-shadow);
    --text-glow: 0 0 3px var(--color-text);

    --spacing-unit: 8px;
    --border-width: 1px;
    --transition-speed: 0.3s;
}

/*------------------------------------*
 * BASE & PAGE STYLES
 *------------------------------------*/
.page {
    flex: 1 1 0;
    min-height: 0;

    background-color: var(--color-bg);
    color: var(--color-text);
    font-family: var(--font-mono);
    width: 100%;
    padding: calc(var(--spacing-unit) * 2);
    display: flex;
    flex-direction: column;
    overflow: hidden;
    position: relative;
}

/* CRT Scanline Effect */
.page::after {
    content: " ";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background:
        linear-gradient(
            to bottom,
            rgba(18, 16, 16, 0) 50%,
            rgba(0, 0, 0, 0.25) 50%
        ),
        linear-gradient(
            90deg,
            rgba(255, 0, 0, 0.06),
            rgba(0, 255, 0, 0.02),
            rgba(0, 0, 255, 0.06)
        );
    z-index: 1;
    background-size:
        100% 2px,
        3px 100%;
    pointer-events: none;
    animation: scanline 10s linear infinite;
}

@keyframes scanline {
    from {
        background-position: 0 0;
    }
    to {
        background-position: 0 -100vh;
    }
}

/*------------------------------------*
 * LAYOUT PANELS
 *------------------------------------*/
.XSystemViewer {
    flex-grow: 1;
    display: grid;
    grid-template-columns: 3fr 1fr;
    grid-template-rows: minmax(0, 2fr) minmax(0, 1fr);
    gap: calc(var(--spacing-unit) * 2);
    z-index: 2;
    animation: fadeIn 1s ease-out;
    min-height: 0;
}

.MainPanel {
    grid-column: 1 / 2;
    grid-row: 1 / 3;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: minmax(0, 1fr);
    gap: calc(var(--spacing-unit) * 2);
    overflow: hidden;
}

.DebugPanel,
.LogsPanel,
.focus,
.console {
    border: var(--border-width) solid var(--color-border);
    padding: var(--spacing-unit);
    background-color: var(--color-panel-bg);
    overflow: hidden; /* Changed to hidden to manage scrolling in children */
    box-shadow: inset 0 0 10px #00000088;
    display: flex;
    flex-direction: column;
    min-height: 0;
}

.LogsPanel {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
}

.DebugPanel {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
}

/*------------------------------------*
 * CONSOLE & INPUT
 *------------------------------------*/
.turns {
    flex-grow: 1;
    overflow-y: auto;
    padding: var(--spacing-unit);
}

.turn {
    padding: var(--spacing-unit) 0;
    border-bottom: var(--border-width) dashed var(--color-border);
    /* UPDATED: New thematic animation for turns appearing */
    animation: scan-and-glitch-in 0.7s forwards
        cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.input {
    padding: var(--spacing-unit);
    border-top: var(--border-width) solid var(--color-border-focus);
    flex-shrink: 0;
}

.prompt {
    width: 100%;
    background: transparent;
    border: none;
    color: var(--color-text);
    font-family: var(--font-mono);
    font-size: 1em;
    resize: none;
    outline: none;
    caret-color: var(--color-text);
}

/* Active input prompt */
.input .prompt {
    padding-left: calc(var(--spacing-unit) * 2);
    position: relative;
}

.input .prompt::before {
    content: ">";
    position: absolute;
    left: 0;
    top: 0;
    color: var(--color-accent);
}

.input .prompt:focus::after {
    content: "â–‹";
    animation: blink 1s step-end infinite;
    color: var(--color-text);
    margin-left: 2px;
}

@keyframes blink {
    50% {
        opacity: 0;
    }
}

/*------------------------------------*
 * TURN VIEWER
 *------------------------------------*/
.XTurnViewer {
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing-unit) * 1.5);
}

.XTurnViewer > .prompt {
    display: flex;
    align-items: center;
    gap: var(--spacing-unit);
    color: var(--color-text-dim);
    font-style: italic;
}

.XTurnViewer > .prompt .text {
    flex-grow: 1;
}

.actions,
.effects {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-unit);
    padding-left: calc(var(--spacing-unit) * 2);
    margin-left: var(--spacing-unit);
    border-left: var(--border-width) solid var(--color-border);
}

.XActionViewer,
.XEffectViewer {
    animation: typeIn 0.4s forwards;
    display: flex;
    align-items: center;
    gap: var(--spacing-unit);
}

.XActionViewer .message {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--spacing-unit);
}

.XEffectViewer .message {
    color: var(--color-error);
    display: flex;
    align-items: center;
    gap: var(--spacing-unit);
}

.UIIcon {
    width: 1.1em;
    height: 1.1em;
    flex-shrink: 0;
    color: var(--color-accent);
}

.XTurnViewer > .prompt .UIIcon {
    color: var(--color-text-dim);
}

/*------------------------------------*
 * FILE VIEWER (UPDATED)
 *------------------------------------*/
/* UPDATED: Flex layout for sticky header */
.XFileViewer {
    display: flex;
    flex-direction: column;
    animation: fadeIn 0.5s ease-out;
    height: 100%;
    overflow: hidden;
}

.XFileLabel {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-unit);
    color: var(--color-accent);
    flex-shrink: 0;
}

/* UPDATED: Header part of the file viewer */
.XFileViewer > .XFileLabel {
    font-size: 1.2em;
    border-bottom: var(--border-width) solid var(--color-border);
    padding-bottom: var(--spacing-unit);
    margin: 0 var(--spacing-unit); /* Use margin to avoid affecting scrollbar */
}

.XFileIcon {
    width: 1.2em;
    height: 1.2em;
    color: var(--color-accent);
    flex-shrink: 0;
}

.XFileName {
    font-weight: bold;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* UPDATED: Scrolling container for file contents */
.kids,
.content {
    flex-grow: 1;
    overflow-y: auto;
    padding: var(--spacing-unit);
}

.kids {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: var(--spacing-unit);
}

.kid {
    border: var(--border-width) solid transparent;
    padding: var(--spacing-unit);
    transition: all var(--transition-speed) ease;
    cursor: pointer;
}

.kid:hover {
    background-color: #ffffff11;
    border-color: var(--color-border);
    box-shadow: var(--glow-intensity);
}

.kid .XFileLabel {
    font-size: 1em;
    border: none;
    padding: 0;
    color: var(--color-text);
}

.kid:hover .XFileLabel {
    color: var(--color-accent);
}

.kid:hover .XFileIcon {
    color: var(--color-accent);
}

/*------------------------------------*
 * CONTENT TYPES
 *------------------------------------*/
.TextContent {
    white-space: pre-wrap;
    line-height: 1.6;
}

.ImageContent {
    max-width: 100%;
    height: auto;
    border: var(--border-width) solid var(--color-border);
    box-shadow: var(--glow-intensity);
}

/*------------------------------------*
 * LOGS & DEBUG PANELS
 *------------------------------------*/
.LogsPanel .title {
    font-size: 1.2em;
    color: var(--color-accent);
    border-bottom: var(--border-width) solid var(--color-border);
    padding-bottom: var(--spacing-unit);
    margin-bottom: var(--spacing-unit);
    flex-shrink: 0;
}

.logs,
.DebugPanel .json {
    flex-grow: 1;
    overflow-y: auto;
}

.logs {
    font-size: 0.9em;
    color: var(--color-text-dim);
}

.log {
    padding: calc(var(--spacing-unit) / 4) 0;
    white-space: pre-wrap;
    word-break: break-all;
    animation: typeIn 0.3s forwards;
}

.DebugPanel .json {
    white-space: pre-wrap;
    word-break: break-all;
    font-size: 0.85em;
    color: var(--color-text-dim);
}

.logsBottom,
.turnsBottom {
    height: 1px;
}

/*------------------------------------*
 * LOADING INDICATOR
 *------------------------------------*/
.Loading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-unit);
    width: 100%;
    height: 100%;
    color: var(--color-accent);
}

.Loading .message::after {
    content: "...";
    display: inline-block;
    overflow: hidden;
    vertical-align: bottom;
    animation: loading-dots 1.5s step-end infinite;
    width: 0px;
}

@keyframes loading-dots {
    25% {
        width: 0.5em;
    }
    50% {
        width: 1em;
    }
    75% {
        width: 1.5em;
    }
}

.Loading .animation {
    width: 80%;
    height: 4px;
    background: linear-gradient(var(--color-accent) 0 0) 0 0 / 0 100% no-repeat
        var(--color-border);
    animation: loading-bar 2s linear infinite;
}

@keyframes loading-bar {
    to {
        background-size: 100% 100%;
    }
}

/*------------------------------------*
 * ANIMATIONS
 *------------------------------------*/
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes typeIn {
    from {
        opacity: 0;
        clip-path: inset(0 100% 0 0);
    }
    to {
        opacity: 1;
        clip-path: inset(0 0 0 0);
    }
}

/* NEW: Thematic animation for new turns */
@keyframes scan-and-glitch-in {
    0% {
        opacity: 0;
        transform: translateY(15px);
        clip-path: inset(0 100% 0 0);
        text-shadow:
            0 0 1px var(--color-error),
            0 0 1px var(--color-accent);
    }
    30% {
        opacity: 1;
        text-shadow:
            0 0 3px var(--color-error),
            0 0 3px var(--color-accent);
    }
    50% {
        clip-path: inset(0 0 0 0);
        transform: translateY(0);
    }
    80% {
        transform: translateX(-2px) skewX(-5deg);
        text-shadow: none;
    }
    100% {
        opacity: 1;
        transform: translateX(0) skewX(0);
    }
}

/*------------------------------------*
 * SCROLLBARS
 *------------------------------------*/
::-webkit-scrollbar {
    width: var(--spacing-unit);
    height: var(--spacing-unit);
}

::-webkit-scrollbar-track {
    background: var(--color-panel-bg);
}

::-webkit-scrollbar-thumb {
    background: var(--color-border-focus);
    border: var(--border-width) solid var(--color-panel-bg);
}

::-webkit-scrollbar-thumb:hover {
    background: var(--color-accent);
}

::-webkit-scrollbar-corner {
    background: transparent;
}
